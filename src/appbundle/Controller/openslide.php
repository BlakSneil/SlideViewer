<?php

namespace AppBundle\Controller;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('openslide')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_openslide.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('openslide.so')) return;
    } else {
      if (!dl('openslide.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class openslide {
	static function new_int_p() {
		return new_int_p();
	}

	static function copy_int_p($value) {
		return copy_int_p($value);
	}

	static function delete_int_p($obj) {
		delete_int_p($obj);
	}

	static function int_p_assign($obj,$value) {
		int_p_assign($obj,$value);
	}

	static function int_p_value($obj) {
		return int_p_value($obj);
	}

	static function new_int32_t_p() {
		return new_int32_t_p();
	}

	static function copy_int32_t_p($value) {
		return copy_int32_t_p($value);
	}

	static function delete_int32_t_p($obj) {
		delete_int32_t_p($obj);
	}

	static function int32_t_p_assign($obj,$value) {
		int32_t_p_assign($obj,$value);
	}

	static function int32_t_p_value($obj) {
		return int32_t_p_value($obj);
	}

	static function new_int64_t_p() {
		return new_int64_t_p();
	}

	static function copy_int64_t_p($value) {
		return copy_int64_t_p($value);
	}

	static function delete_int64_t_p($obj) {
		delete_int64_t_p($obj);
	}

	static function int64_t_p_assign($obj,$value) {
		int64_t_p_assign($obj,$value);
	}

	static function int64_t_p_value($obj) {
		return int64_t_p_value($obj);
	}

	static function new_uint32_t_p() {
		return new_uint32_t_p();
	}

	static function copy_uint32_t_p($value) {
		return copy_uint32_t_p($value);
	}

	static function delete_uint32_t_p($obj) {
		delete_uint32_t_p($obj);
	}

	static function uint32_t_p_assign($obj,$value) {
		uint32_t_p_assign($obj,$value);
	}

	static function uint32_t_p_value($obj) {
		return uint32_t_p_value($obj);
	}

	static function openslide_detect_vendor($filename) {
		return openslide_detect_vendor($filename);
	}

	static function openslide_open($filename) {
		return openslide_open($filename);
	}

	static function openslide_get_level_count($osr) {
		return openslide_get_level_count($osr);
	}

	static function openslide_get_level0_dimensions($osr,$w,$h) {
		openslide_get_level0_dimensions($osr,$w,$h);
	}

	static function openslide_get_level_dimensions($osr,$level,$w,$h) {
		openslide_get_level_dimensions($osr,$level,$w,$h);
	}

	static function openslide_get_level_downsample($osr,$level) {
		return openslide_get_level_downsample($osr,$level);
	}

	static function openslide_get_best_level_for_downsample($osr,$downsample) {
		return openslide_get_best_level_for_downsample($osr,$downsample);
	}

	static function openslide_read_region($osr,$dest,$x,$y,$level,$w,$h) {
		openslide_read_region($osr,$dest,$x,$y,$level,$w,$h);
	}

	static function openslide_close($osr) {
		openslide_close($osr);
	}

	static function openslide_get_error($osr) {
		return openslide_get_error($osr);
	}

	const OPENSLIDE_PROPERTY_NAME_COMMENT = OPENSLIDE_PROPERTY_NAME_COMMENT;

	const OPENSLIDE_PROPERTY_NAME_VENDOR = OPENSLIDE_PROPERTY_NAME_VENDOR;

	const OPENSLIDE_PROPERTY_NAME_QUICKHASH1 = OPENSLIDE_PROPERTY_NAME_QUICKHASH1;

	const OPENSLIDE_PROPERTY_NAME_BACKGROUND_COLOR = OPENSLIDE_PROPERTY_NAME_BACKGROUND_COLOR;

	const OPENSLIDE_PROPERTY_NAME_OBJECTIVE_POWER = OPENSLIDE_PROPERTY_NAME_OBJECTIVE_POWER;

	const OPENSLIDE_PROPERTY_NAME_MPP_X = OPENSLIDE_PROPERTY_NAME_MPP_X;

	const OPENSLIDE_PROPERTY_NAME_MPP_Y = OPENSLIDE_PROPERTY_NAME_MPP_Y;

	const OPENSLIDE_PROPERTY_NAME_BOUNDS_X = OPENSLIDE_PROPERTY_NAME_BOUNDS_X;

	const OPENSLIDE_PROPERTY_NAME_BOUNDS_Y = OPENSLIDE_PROPERTY_NAME_BOUNDS_Y;

	const OPENSLIDE_PROPERTY_NAME_BOUNDS_WIDTH = OPENSLIDE_PROPERTY_NAME_BOUNDS_WIDTH;

	const OPENSLIDE_PROPERTY_NAME_BOUNDS_HEIGHT = OPENSLIDE_PROPERTY_NAME_BOUNDS_HEIGHT;

	static function openslide_get_property_names($osr) {
		return openslide_get_property_names($osr);
	}

	static function openslide_get_property_value($osr,$name) {
		return openslide_get_property_value($osr,$name);
	}

	static function openslide_get_associated_image_names($osr) {
		return openslide_get_associated_image_names($osr);
	}

	static function openslide_get_associated_image_dimensions($osr,$name,$w,$h) {
		openslide_get_associated_image_dimensions($osr,$name,$w,$h);
	}

	static function openslide_read_associated_image($osr,$name,$dest) {
		openslide_read_associated_image($osr,$name,$dest);
	}

	static function openslide_get_version() {
		return openslide_get_version();
	}

	static function openslide_can_open($filename) {
		return openslide_can_open($filename);
	}

	static function openslide_get_layer_count($osr) {
		return openslide_get_layer_count($osr);
	}

	static function openslide_get_layer0_dimensions($osr,$w,$h) {
		openslide_get_layer0_dimensions($osr,$w,$h);
	}

	static function openslide_get_layer_dimensions($osr,$level,$w,$h) {
		openslide_get_layer_dimensions($osr,$level,$w,$h);
	}

	static function openslide_get_layer_downsample($osr,$level) {
		return openslide_get_layer_downsample($osr,$level);
	}

	static function openslide_get_best_layer_for_downsample($osr,$downsample) {
		return openslide_get_best_layer_for_downsample($osr,$downsample);
	}

	static function openslide_get_comment($osr) {
		return openslide_get_comment($osr);
	}

	static function _openslide_give_prefetch_hint_UNIMPLEMENTED() {
		return _openslide_give_prefetch_hint_UNIMPLEMENTED();
	}

	static function _openslide_cancel_prefetch_hint_UNIMPLEMENTED() {
		_openslide_cancel_prefetch_hint_UNIMPLEMENTED();
	}

	static function SOFTWARE_get() {
		return SOFTWARE_get();
	}

	static function OPENSLIDE_get() {
		return OPENSLIDE_get();
	}

	static function fail($format) {
		fail($format);
	}

	static function write_png($osr,$filePath,$x,$y,$level,$w,$h) {
		write_png($osr,$filePath,$x,$y,$level,$w,$h);
	}
}

/* PHP Proxy Classes */

?>
